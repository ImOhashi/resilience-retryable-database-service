### SERVER
server:
  port: 8000

### SPRING
spring:
  application:
    name: "resilience-retryable-database-service"
  output:
    ansi:
      enabled: ALWAYS
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: admin
  jpa:
    database-plataform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  kafka:
    producer:
      bootstrap-servers: localhost:29092

### RESILIENCE4J
resilience4j:
  retry:
    instances:
      createPersonRetry:
        max-attemprs: 3
        wait-duration: 4s
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - com.ohashi.resilienceretryabledatabaseservice.domain.exception.PersonAlreadyExistsException
        ignore-exceptions:
          - java.lang.Exception

### LOGGING
logging:
  level:
    root: INFO
    com:
      example: TRACE

### ACTUATOR
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info

### INFO ENDPOINT CONFIG
info:
  app:
    name: "resilience-retryable-database-service"
    description: "resilience-retryable-database-service powered by Leonardo Ohashi"
  organization: "Leonardo Ohashi"
  java-version: ${java.version}
  java-vendor: ${java-vendor}

### SWAGGER
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /docs
    operationsSorter: method